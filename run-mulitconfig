#!/bin/bashset -uusage(){cat << EOFusage: $0 optionsWARNING: Do not run this script on a working MySQL server. It will stop & start the service and putput lots of load on the server.This script runs through a directory containing one or more mysqld config files. For each file it goes through the following steps:- stops the server, - deletes the ib_logs and binlogs - restarts the server with the config file passed to --defaults-file- runs ./run-sysbench Once complete it shuts down MySQL and aggregates the sysbench results in a CSV file.OPTIONS:   -i	MySQL pid file (required)   -d	Config directory			[./conf]   -h	MySQL host 				[localhost]   -s	MySQL socket 				[/tmp/mysql.sock]   -u	MySQL username				[root]   -p	MySQL password   -w	ReadWrite mode (on/off) 			[on]   -o	Timeout for each sysbench run		[60]   -r	Directory to print results to		[./results]   -t	List of thread counts to iterate [4 8 16 32 64 128 256]EOF}pid=dir=./confhost=localhostsocket=/tmp/mysql.sockuser=rootpassword=readwrite=ontimeout=60threads="4,8,16,32,64,128,256"resultsdir=./resultsparams=while getopts i:d:h:s:u:p:w:o:r:t: namedo	case $name in		i) pid="$OPTARG";;		d) dir="$OPTARG";;		h) host="$OPTARG"		   params="$params -h $host";;		s) socket="$OPTARG"		   params="$params -s $socket";;		u) user="$OPTARG"		   params="$params -u $user";;		p) password="$OPTARG"		   params="$params -p $password";;		w) readwrite="$OPTARG"		   params="$params -w $readwrite";;		o) timeout="$OPTARG"		   params="$params -o $timeout";;		r) resultsdir="$OPTARG"		   params="$params -r $resultsdir";;		t) threads="$OPTARG"		   params="$params -t $threads";;		?) usage		   exit;;	esacdoneif [[ -z $pid ]]then     usage     exit 1fi# Have we got any config files to process?for f in $( ls $dir ); do	# Stop mysql if running	if [ -e $pid ]; then		printf "#### Shutting down MySQL \n"		sudo kill $(sudo cat $pid)		sleep 20		# Clean up replication and bin logs		sudo rm -f /SAN/SQLWrite/core55/ib_*		sudo rm -f /SAN/SQLRead/core55/ib_*		sudo rm -f /SAN/SQLWrite/core55/mysql-core55-bin*		sudo rm -f /SAN/SQLRead/core55//mysql-core55-bin*	fi		# Fire up MySQL with this config and then give it some time to warm up	printf "#### Starting MySQL with $f \n"	sudo mysqld_safe --defaults-file=$dir/$f &	sleep 60		#run sysbench passing through some params	printf "Running run-sysbench with $params \n"	./run-sysbench $params	done# Aggregate the results into a results.csv file./aggregate-results -r $resultsdir > $resultsdir/results.csv# Stop mysql if runningif [ -e $pid ]; then	printf "#### Shutting down MySQL \n"	sudo kill $(sudo cat $pid)	# Clean up replication and bin logs	sudo rm -f /SAN/SQLWrite/core55/ib_*	sudo rm -f /SAN/SQLRead/core55/ib_*	sudo rm -f /SAN/SQLWrite/core55/mysql-core55-bin*	sudo rm -f /SAN/SQLRead/core55//mysql-core55-bin*fi