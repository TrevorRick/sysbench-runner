sysbench-runner - Automated MySQL benchmarking using multiple configurations and workloadsWhy:The idea is to simplify and automate the repetitive task of benchmarking a MySQL server using a variety of configurations and workloads. sysbench-runner is a wrapper for the sysbench oltp tests (http://sysbench.sourceforge.net/docs/#database_mode). The general workflow for using sysbench is something like:- Make configuration change- Restart server- Run sysbench tests with various numbers of worker threads- Collate results- RepeatThis is both frustrating and time consuming as for significant chunks of time you are left waiting for sysbench to return some data so you can tweak your config and run it again. It can also be error prone as the volume of data and number of configurations increases.With sysbench-runner the workflow changes to be:- Create multiple configurations, with each containing a change to be tested- Run sysbench-runner against these configurations with a predefined list of worker thread settings for each- Go do something fun and interesting for a few hours- Come back and review the aggregate resultsThis is simpler, less time consuming and less error prone.Prerequisites:- sysbench-0.4.12 (may work on other versions)- A local MySQL server with a database called sbtest which has been prepared using the sysbench "prepare" command (http://sysbench.sourceforge.net/docs/#general_syntax)- a directory containing the MySQL config files (my.cnf) that you which to test againstUsage:There are three scripts in this package aggregate-results, run-multiconfig and run-sysbench. aggregate-results and run-sysbench can be called directly, but are more commonly called via run-multiconfig.run-multiconfig=-=-=-=-=-=-=-=-=-=-Main wrapper, controls reading config files and starting and stopping mysql.Options:   -i	MySQL pid file (required)   -d	Config directory [./conf]   -h	MySQL host [localhost]   -s	MySQL socket [/tmp/mysql.sock]   -u	MySQL username [root]   -p	MySQL password   -w	ReadWrite mode (on/off) [on]   -o	Timeout for each sysbench run [60]   -r	Directory to print results to [./results]   -t	List of thread counts to iterate [4,8,16,32,64,128,256]Minimal usage:	./run-multiconfig -i /var/mysql/data/mysql.pid -p passwordComplete usage (with default values):	./run-multiconfig -i /var/mysql/data/mysql.pid -d ./conf -h localhost \	-s /tmp/mysql.sock -u root -p password -w on -0 60 -r ./results \	-t 4,8,16,32,64,128,256run-sysbench=-=-=-=-=-=-=-=-=-=-Called from run-multiconfig or can be run directly. Handles calls to sysbench and storing results.Options:   -h	MySQL host [localhost]   -s	MySQL socket [/tmp/mysql.sock]   -u	MySQL username [root]   -p	MySQL password   -w	ReadWrite mode (on/off) [on]   -o	Timeout for each sysbench run [60]   -r	Directory to print results to [./results]   -t	List of thread counts to iterate [4,8,16,32,64,128,256]Minimal usage:	./run-sysbench -p passwordComplete usage (with default values):	./run-sysbench -h localhost -s /tmp/mysql.sock -u root -p password -w on -0 60 \	-r ./results -t 4,8,16,32,64,128,256	aggregate-results=-=-=-=-=-=-=-=-=-=-Called from run-multiconfig or can be run directly. Reads directory containing results created by run-sysbench and aggregates them into a CSV.Main wrapper, controls reading config files and starting and stopping mysql.Options:   -r	Directory containing results [./results]Minimal usage:	./aggregate-resultsComplete usage (with default values):	./aggregate-results -r ./results